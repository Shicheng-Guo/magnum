##########################################################################
# Magnum configuration file
# 
# All variables that are loaded by Settings must be specified in this file,
# otherwise an error message is displayed.
#
# Boolean values: 0 => false, 1 => true
##########################################################################


##########################################################################
# VARIOUS

# Mode: [--mode]
# 1 => Network properties
# 2 => Network operations
# 3 => Enrichment analysis
# 4 => Link module association analysis
mode = 0
# Seed for the random number generator, set to -1 to use current time [--seed] 
randomSeed = 42
# Set true to use verbose mode (print more information) [--verbose] 
verbose = 0
# Default output directory to save files (empty = home directory; '.' = working directory) [--outdir]
outputDirectory = .
# Output filename
outputFilename = 
# Compress output files (gzip)
compressFiles = 1


##########################################################################
# NETWORK PROPERTIES

# ========================================================================
# INPUT NETWORK

# Directory containing the networks [--netdir <dir>]
networkDir = 
# The input network file [--net <file>]
networkFile = 
# Delimiter used to separate columns, either 'TAB' or 'SPACE'
networkFileDelim = TAB
# Defines if the network should be interpreted as directed or undirected [--dir]
isDirected = 1
# Defines if self loops should be removed from the network [--noself]
removeSelfLoops = 0
# Set true to treat the network as weighted [--weighted]
isWeighted = 1
# Threshold for including weighted edges [--cutoff <value>]
threshold = 0.0
# Exclude "super-hubs" that connect to more than the given fraction of genes
superHubThreshold = 0
# Optional file specifying a set of reference nodes
refNodesFile =

# ========================================================================
# NETWORKOPS

# Take union (max edge) over all networks in networkDir or the sets specified in the file below [--union]
computeUnion = 0
# Define the network sets that should be combined (leave empty to combine all networks)
networkGroupFile = 
# Prefix of the files in the network dir
networkFilePrefix = 

# Add pairs of corresponding networks in two directories (e.g., promoter and enhancer-based networks)
computePairwiseSum = 0
# The network directory of the second networks
networkDir2 = 

# ========================================================================
# BASIC NETWORK PROPERTIES

# Node degree (directed networks, also indegree and outdegree) [--degree]
computeDegree = 0
# Node betweenness centrality (edge directionality observed for directed networks) [--betweenness]
computeBetweenness = 0
# Node clustering coefficient (edge directionality observed for directed networks) [--clustcoeff]
computeClusteringCoefficient = 0
# For each node, distance to all other nodes (or all reference nodes; edge directionality observed) and closeness centrality [--shortestpath]
computeShortestPathLengths = 0

# ========================================================================
# KERNELS
# Only implemented for undirected networks

# P-step random walk kernel (Smola & Kondor, 2003) [--pstep]
computePstepKernel = 0
# alpha parameter of p-step random walk kernel (alpha >= 2)
pstepKernelAlpha = 2
# Steps p of random walk kernel (comma-separated list of positive integers given in increasing order, the kernel for each listed p will be saved) [-nsteps <int>]
pstepKernelP = 4
# Normalize the kernel matrix (divide by the max)
pstepKernelNormalize = 1

# ========================================================================
# TANIMOTO COEFFICIENTS

# Tanimoto coefficient between target genes
computeTargetTanimoto = 0
# Tanimoto coefficient between regulators
computeTfTanimoto = 0

# ========================================================================
# OUTPUT FILES

# A suffix that is appended to all output files for this run (use to distinguish output files from multiple runs)
outputSuffix = 
# Export all computed pairwise node properties (e.g., similarity, distance matrices)
exportPairwiseNodeProperties = 1
# Export all computed node properties (e.g., avg. similarity, distance for each node)
exportNodeProperties = 1


##########################################################################
# GENOME ANNOTATION

# Set of genes to be considered (leave empty to use all genes from the annotation file)
genesToBeLoadedFile = 

# The chromosome to be considered (chr1, ..., chr22, chrX, chrY), leave empty for all chromosomes 
chromosome = 
# Ignore sex chromosomes
excludeXYChromosomes = 1
# Gencode annotation (use for ENSEMBL gene IDs)
genecodeAnnotationFile = data/annotation/gencode/gencode.v18.annotation.genes.gtf
# UCSC genome browser annotation (use for Entrez IDs) 
ucscAnnotationFile = data/annotation/ucsc/ucsc_known_genes_2013-09-03.txt
# Set true to load only protein-coding genes
loadOnlyProteinCodingGenes = 1

# Mapping file to convert Entrez IDs, ENSEMBL IDs and gene symbols
geneIdMappingFile = data/annotation/gencode/ensembl_entrez_hugo_ids.txt


##########################################################################
# ENRICHMENT CURVES

# ========================================================================
# INPUT

# The gene coordinates (custom annotation) [--genes <file>]
#geneCoordFile = data/geneScores/gene_coord.bed
geneCoordFile = 
# The gene scores [--scores <file>]
geneScoreFile = 
# Cutoff for genome-wide significance of gene scores
genomeWideSignificanceThreshold = 1e-6
# Exclude genome-wide significant genes (below threshold)
excludeGenomeWideSignificantGenes = 0
# The file with the functional data, e.g. network kernels (cols: gene id, property 1, property 2, ...) [--cmatrix <file>]
functionalDataFile = 
# Comma-separated list of columns that should be loaded (leave empty: all columns; 1: first gene property column)
functionalDataCols = 

# Genes to be excluded from enrichment analysis (e.g., MHC region) [--excl <file>]
#excludedGenesFile = /Users/marbach/Java/magnum/data/geneScores/tfs_mhc.txt
excludedGenesFile = 
# Gene pairs to be excluded from enrichment analysis (e.g., genes in LD)
excludedGenePairsFile = 
# Exclude gene pairs with windows smaller than the given distance apart (given in *megabases*; -1: no exclusion; 1000: all genes on same chromosome) [--neighbors <int>]
excludedGenesDistance = 1

# Gene IDs used in geneScoreFile, excludedGenesFile, excludedGenePairsFile ('custom', 'ensembl', 'entrez', 'hugo')
idTypeGeneScores = custom
# Gene IDs used in functionalDataFile
idTypeFunctionalData = custom

# Use precomputed network kernels if available in networkKernelDir
usePrecomputedKernels = true
# Directory for network kernels (default: <outputDir>/network_kernels/)
networkKernelDir = 
# Save network kernels for use in subsequent runs (takes a lot of disk space!)
exportKernels = false

# ========================================================================
# PARAMETERS

# Number of random permutations used to compute empirical p-values [--permut <int>]
numPermutations = 10000
# The number of bins for within-degree permutation [--bins <int>]
numBins = 100
# Scale kernels: K'(i,j) = K(i,j)/sqrt(rowSums(K)[i] * colSums(K)[j])
scaleKernel = 0

# Equidistant curve resolution, e.g., set 10 to compute every 10th point on the curves
constCurveResolution = 10
# Varying curve resolution, e.g., set 2 to compute points: 2, 6, 12, 20, 30, 42, ... (takes precedence over constCurveResolution, set -1 to disable)
varCurveResolution = -1
# Compute curves only for the top part of the list (e.g., 0.1 for top 10%) [--curve <value>]
curveCutoff = 0.2
# Sliding window size (500)
slidingWindowSize = -1

# Draw boundaries for given p-values (e.g., set 0.05 to draw the upper/lower boundary where only 5% of random curves above/below) 
pval = 0.01,0.05
# Indicates whether the boundaries are one-sided or two-sided (equivalent to dividing pval by two)
twoSidedTest = 0
# Control FDR over all points of the curve together (i.e., correct for multiple hypothesis testing across curve)
controlFDR = 0

# The top X genes will be ignored for FDR control (too noisy at start of the list)
FDRStart = 100
# Start to integrate the AUC only at k=10 (reduce noise at the start of the list)
AUCStart = 10
# Index of gene scores for which enrichment is to be computed, e.g., (0,9) for the first ten gene scores 
geneScoreIndexStart = 0
geneScoreIndexEnd = 0


# ========================================================================
# OUTPUT

# Number of random permutations for which enrichment curves are exported (-1: save all, 0: save none)
numPermutationsExport = 0
# Prefix for output files (usually the network name)
outputPrefix = 

